{"slots":{"0":{"name":"slot1","type":{"events":[],"methods":[]}},"1":{"name":"slot2","type":{"events":[],"methods":[]}},"2":{"name":"slot3","type":{"events":[],"methods":[]}},"3":{"name":"slot4","type":{"events":[],"methods":[]}},"4":{"name":"slot5","type":{"events":[],"methods":[]}},"5":{"name":"slot6","type":{"events":[],"methods":[]}},"6":{"name":"slot7","type":{"events":[],"methods":[]}},"7":{"name":"slot8","type":{"events":[],"methods":[]}},"8":{"name":"slot9","type":{"events":[],"methods":[]}},"9":{"name":"slot10","type":{"events":[],"methods":[]}},"-1":{"name":"unit","type":{"events":[],"methods":[]}},"-2":{"name":"system","type":{"events":[],"methods":[]}},"-3":{"name":"library","type":{"events":[],"methods":[]}}},"handlers":[{"code":"onClick(x, y)","filter":{"args":[{"variable":"*"},{"variable":"*"}],"signature":"mouseDown(x,y)","slotKey":"0"},"key":11},{"code":"onClick(x, y)","filter":{"args":[{"variable":"*"},{"variable":"*"}],"signature":"mouseDown(x,y)","slotKey":"1"},"key":12},{"code":"onClick(x, y)","filter":{"args":[{"variable":"*"},{"variable":"*"}],"signature":"mouseDown(x,y)","slotKey":"2"},"key":"0"},{"code":"onClick(x, y)","filter":{"args":[{"variable":"*"},{"variable":"*"}],"signature":"mouseDown(x,y)","slotKey":"3"},"key":"1"},{"code":"onClick(x, y)","filter":{"args":[{"variable":"*"},{"variable":"*"}],"signature":"mouseDown(x,y)","slotKey":"4"},"key":"2"},{"code":"onClick(x, y)","filter":{"args":[{"variable":"*"},{"variable":"*"}],"signature":"mouseDown(x,y)","slotKey":"5"},"key":"3"},{"code":"onClick(x, y)","filter":{"args":[{"variable":"*"},{"variable":"*"}],"signature":"mouseDown(x,y)","slotKey":"6"},"key":"4"},{"code":"onClick(x, y)","filter":{"args":[{"variable":"*"},{"variable":"*"}],"signature":"mouseDown(x,y)","slotKey":"7"},"key":13},{"code":"onClick(x, y)","filter":{"args":[{"variable":"*"},{"variable":"*"}],"signature":"mouseDown(x,y)","slotKey":"8"},"key":14},{"code":"onClick(x, y)","filter":{"args":[{"variable":"*"},{"variable":"*"}],"signature":"mouseDown(x,y)","slotKey":"9"},"key":15},{"code":"local a=\"V2.1.2\"\r\n\r\nPlayerContainerProficiency = 30 --export Your Container Proficiency bonus in total percent (Skills->Mining and Inventory->Inventory Manager)\r\nPlayerContainerOptimization = 0 --export Your Container Optimization bonus in total percent (Skills->Mining and Inventory->Stock Control)\r\nLowLevel = 25 --export Percent for low level indicator\r\nHighLevel = 50 --export Percent for high level indicator\r\nContainerMatch = \"C_(.+)\" --export Match for single item Storage Container names (e.g. \"C_Hematite\")\r\nOverflowMatch = \"O_(.+)\" --export Match for single item Overflow Container names (e.g. \"O_Hydrogen\")\r\nDisplayBlocks = \"t5 t4 pl al t3 t2 t1 ga\" --export Container types to display from top to bottom (t1-t5, pl, al, ga)\r\nContRowsPerScreen = 20 --export Container rows per screen\r\nProdRowsPerScreen = 24 --export Production rows per screen\r\nAlignTop = false --export Align with top of screen\r\nWaitingAsAlarm = false --export Display waiting state with alarm colour\r\nKeepBlocksTogether = false  --Don't break blocks across displays\r\nDataThrottle = 50 --export Maximum read/writes to process each update, lower this if you get CPU overloads\r\nFirstDelay = .3 --export Delay before First calculations\r\nRefreshDelay = 5 --export Screen Refresh Rate\r\nMonitorDelay = 3 --export Delay before Read operations are processed\r\nSkipHeadings = false --export No substance headings\r\nUS_Spellings = false --export Expect American spellings\r\n\r\ncontGap = 1.33 --export Cont Table gap (temporary)\r\nprodGap = 0.4 --export Prod Table gap (temporary)\r\nprodBase = 95 --export Prod Table base (temporary)\r\nprodScale = 1.0 --export Prod Table scale (temporary)\r\n\r\ncontDebug = false --export Container Debug Flag\r\n\r\nlocal b=prodScale*(prodBase/ProdRowsPerScreen-prodGap)local c=100/ContRowsPerScreen-contGap;properties={Bauxite={density=1.2808,ore=true},Coal={density=1.3465,ore=true},Quartz={density=2.6498,ore=true},Hematite={density=5.0398,ore=true},Chromite={density=4.54,ore=true},Malachite={density=3.9997,ore=true},Limestone={density=2.7105,ore=true},Natron={density=1.5499,ore=true},Petalite={density=2.4119,ore=true},Garnierite={density=2.6,ore=true},Acanthite={density=7.1995,ore=true},Pyrite={density=5.0098,ore=true},Cobaltite={density=6.33,ore=true},Cryolite={density=2.9495,ore=true},Kolbeckite={density=2.37,ore=true},GoldNuggets={density=19.3,ore=true,short=\"GoldNug\"},Rhodonite={density=3.76,ore=true},Columbite={density=5.38,ore=true},Illmenite={density=4.55,ore=true},Vanadinite={density=6.95,ore=true},Hydrogen={density=0.069785,short=\"H₂\"},Oxygen={density=1.0000,short=\"O₂\"},Aluminium={density=2.7,short=\"Al\",usSpelling=\"Aluminum\"},Carbon={density=2.27,short=\"C\"},Silicon={density=2.33,short=\"Si\"},Iron={density=7.85,short=\"Fe\"},Calcium={density=1.55,short=\"Ca\"},Chromium={density=7.19,short=\"Cr\"},Copper={density=8.96,short=\"Cu\"},Sodium={density=0.97,short=\"Na\"},Lithium={density=0.53,short=\"Li\"},Nickel={density=8.91,short=\"Ni\"},Silver={density=10.49,short=\"Ag\"},Sulfur={density=1.82,short=\"S\"},Cobalt={density=8.9,short=\"Co\"},Fluorine={density=1.7,short=\"Fl\"},Gold={density=19.3,short=\"Au\"},Scandium={density=2.98,short=\"Sc\"},Manganese={density=7.21,short=\"Mn\"},Niobium={density=8.57,short=\"Ni\"},Titanium={density=4.51,short=\"Ti\"},Vanadium={density=6.00,short=\"Va\"},Silumin={density=3.00},Steel={density=8.05},AlFe={density=7.50},AlLi={density=2.50},CaRefCu={density=8.10},CuAg={density=9.20},Duralumin={density=2.80},[\"Stainless steel\"]={density=7.75,short=\"S.Steel\"},Inconel={density=8.5},Polycarbonate={density=1.4,short=\"Polycarb\"},Polycalcite={density=1.5,short=\"Polycalc\"},Polysulfide={density=1.6,short=\"Polysulf\"},Fluoropolymer={density=1.65,short=\"Fl.Poly\"}}local d={t5={Headers={\"T5 Ores\",\"T5 Pures\"},Rows={{\"Rhodonite\",\"Manganese\"},{\"Columbite\",\"Niobium\"},{\"Illmenite\",\"Titanium\"},{\"Vanadinite\",\"Vanadium\"}}},t4={Headers={\"T4 Ores\",\"T4 Pures\"},Rows={{\"Cobaltite\",\"Cobalt\"},{\"Cryolite\",\"Fluorine\"},{\"GoldNuggets\",\"Gold\"},{\"Kolbeckite\",\"Scandium\"}}},pl={Headers={\"Plastic\",\"Plastic\"},Rows={{\"Polycarbonate\",\"Polycalcite\"},{\"Polysulfide\",\"Fluoropolymer\"}}},al={Headers={\"Alloys\",\"Alloys\"},Rows={{\"Silumin\",\"Duralumin\"},{\"AlFe\",\"CaRefCu\"},{\"Steel\",\"Stainless steel\"},{\"AlLi\",\"Inconel\"}}},t3={Headers={\"T3 Ores\",\"T3 Pures\"},Rows={{\"Petalite\",\"Lithium\"},{\"Garnierite\",\"Nickel\"},{\"Pyrite\",\"Sulfur\"},{\"Acanthite\",\"Silver\"}}},t2={Headers={\"T2 Ores\",\"T2 Pures\"},Rows={{\"Natron\",\"Sodium\"},{\"Malachite\",\"Copper\"},{\"Limestone\",\"Calcium\"},{\"Chromite\",\"Chromium\"}}},t1={Headers={\"T1 Ores\",\"T1 Pures\"},Rows={{\"Bauxite\",\"Aluminium\"},{\"Hematite\",\"Iron\"},{\"Coal\",\"Carbon\"},{\"Quartz\",\"Silicon\"}}},ga={Headers={\"H₂\",\"O₂\"},Rows={{\"Hydrogen\",\"Oxygen\"},{\"Hydrogen\",\"Oxygen\",true}}}}local e={[\"electronics industry\"]=\"Elec. ind.\",[\"chemical industry\"]=\"Chem. ind.\",[\"metalworks industry\"]=\"Met. ind.\"}local f={basic=1,uncommon=2,advanced=3,rare=4}function slotValid(g)return g and type(g)==\"table\"and type(g.export)==\"table\"and g.getElementClass end;local h={}local i={}local j={}local k={}local l={}local m={}local n={[0]=\"No Schematic Set\"}local o=1;local p={on=false,id=0,stickers={}}local q=0;function onStart()function setMessage(r,s)local t=[[<div style=\"width:100vw\"><div style=\"margin-top: 20vw;padding: 10vw; font-size: 4em;width: 100vw;display: inline-block;\">]]..s..[[</div></div>]]r.setHTML(t)end;for u,g in pairs(unit)do if slotValid(g)then if g.setHTML then g.activate()setMessage(g,\"If you see this you need to rename the screens...\")elseif not databank and g.getStringValue then databank=g elseif not core and g.getConstructId then core=g end end end;if not core then return end;q=2^math.floor(math.log(core.getMaxHitPoints(),10)+3)for u,g in pairs(unit)do if slotValid(g)then if g.setHTML then local v=g.getId()if v then local w=core.getElementNameById(v)local type,x=string.match(w,\"(.*)Display(%d)\")if type and x then x=tonumber(x)if type==\"Cont\"then if h[x]then h[x].screens[v]=g else h[x]={screens={[v]=g}}end;setMessage(g,\"If you see this you may need to restart the master board\")elseif type==\"Prod\"then if i[x]then i[x].screens[v]=g else i[x]={screens={[v]=g}}end;setMessage(g,\"If you see this you may need to restart the master board\")end end end end end end;function extractSubstanceName(w,y)local z=string.gsub(w,y,\"\")return z end;function getBaseCointainerProperties(v)local A=core.getElementMaxHitPointsById(v)if A<=123 then return 0.0,0.0 elseif A<=998 then return 229.09,1000.0 elseif A<=7996 then return 1281.31,8000.0 elseif A<=17315 then return 7421.35,64000.0 else return 14842.7,128000.0 end end;function addContainer(v,type)if string.lower(type)~=\"container\"then return false end;local w=core.getElementNameById(v)if not w then return true end;if contDebug then system.print(\"Checking container: \"..w..\" [\"..v..\"] against name matches\")end;local B=false;local z=string.match(w,\"^\"..ContainerMatch)if not z then z=string.match(w,\"^\"..OverflowMatch)if not z then if contDebug then system.print(\"  Ignoring because no name match\")end;return end;B=true end;local C=properties[z]if not C then if contDebug then system.print(\"  Ignoring because \"..z..\" not tracked\")end;return true end;local D,E=getBaseCointainerProperties(v)capacity=E*(1.0+PlayerContainerProficiency/100)if contDebug then system.print(\"Adding container: \"..w..\" [\"..v..\"] storing \"..z)end;j[v]={name=w,id=v,substance=z,capacity=capacity,selfMass=D,property=C,overflow=B,isHub=E==0}return true end;function addIndustry(v,type)local F,G=string.match(type,\"(%S+)%s(.+)\")if not F or not G then return false end;if not f[F]then return false end;local w=core.getElementNameById(v)local H=string.lower(G)local I=e[H]or G;local J={name=w,industry=G,shortType=I,id=v,tier=F}if H==\"assembly line\"then J.assembly=true;local K,L=assemblySize(v)J.sortKey=K*10000+v;J.size=L else J.sortKey=G..\"_\"..w..\"_\"..v end;table.insert(k,J)return true end;local M=core.getElementIdList()for N,v in ipairs(M)do local type=core.getElementTypeById(v)if not addContainer(v,type)then addIndustry(v,type)end end end;local O={\"XS\",\" S\",\" M\",\" L\",\"XL\"}function assemblySize(v)local P=core.getElementMassById(v)local K=math.floor(math.log(P-90,10)+0.1)return K,O[K]end;tolColours={blue=\"#332288\",cyan=\"#66CCEE\",green=\"#228833\",yellow=\"#CCBB44\",red=\"#EE6677\",purple=\"#AA3377\",grey=\"#BBBBBB\",darkYellow=\"#666633\"}local Q=\"darkslategray\"local R=tolColours.green;local S=tolColours.cyan;local T=tolColours.yellow;local U=tolColours.red;local V=\"alignBottom\"if AlignTop then V=\"alignTop\"end;local W=[[<style>\r\n.alignTop,.alignBottom,.bar{font-family:monospace;color:white;text-align:left}\r\n.alignTop,.alignBottom{display:flex;width:100vw;height:100vh;padding:2px}\r\n.alignBottom{justify-content:flex-end;align-items:flex-end;margin:auto}\r\n.bar{border-radius:4px;border:1px solid white;margin:2px;}\r\n.bar::after{content: attr(lab);font-weight:600;padding:5px}\r\ntable{width:100vw}\r\ntd,th,table{margin:0;padding:0}\r\n</style>]]local X={d1=[[<div class=\"]]..V..[[\">]],de=[[</div>]],tc=[[<table style=\"font-size:]]..c..[[vh\">]],tp=[[<table style=\"font-size:]]..b..[[vh\">]],te=[[</table>]],tr=[[<tr>]],tr2=[[<tr style=\"background-color:]]..Q..[[;\">]],tre=[[</tr>]],th=[[<th>]],thL=[[<th style=\"margin-left:20px\">]],thL2=[[<th style=\"margin-left:20px\" colspan=\"2\">]],thR=[[<th style=\"text-align:right\">]],th3=[[<th style=\"background-color:]]..Q..[[;\">&nbsp;</th>]],the=[[</th>]],nbr=[[<nobr>]],nbre=[[</nobr>]]}function cell(Y,s,Z,_,L)local a0=\"\"if Z then a0=a0 ..\" text-align:\"..Z..\";\"end;if _ then a0=a0 ..\" color:\".._..\";\"end;if L then a0=a0 ..\" font-size:\"..L..\";\"end;if a0 then a0=[[ style=\"]]..a0 ..[[\"]]end;return[[<th width=]]..Y..a0 ..[[><nobr>]]..s..[[</nobr></th>]]end;function refreshContainerDisplay(a1)local a2={}function processSubstanceContainer(a3)local a4=(core.getElementMassById(a3.id)-a3.selfMass)*(1.0+PlayerContainerOptimization/100)local a5=a4/a3.property.density;local a6=a3.substance;if a3.overflow then a6=\"O_\"..a3.substance end;if a2[a6]then a2[a6].volume=a2[a6].volume+a5;a2[a6].contentMass=a2[a6].contentMass+a4;a2[a6].capacity=a2[a6].capacity+a3.capacity else a2[a6]={substance=a3.substance,volume=a5,contentMass=a4,capacity=a3.capacity,overflow=a3.overflow}end;if contDebug then system.print(a3.name..\" \"..a3.substance..\" : contentMass : \"..a2[a6].contentMass)end end;for N,a3 in pairs(j)do processSubstanceContainer(a3)end;function statusColour(a7,a8)if a8 then a7=100.0-a7 end;if a7<=LowLevel then return U end;if a7<=HighLevel then return T end;return R end;function barGraph(Y,a7,_)return[[<td width=]]..Y..[[><div class=\"bar\" lab=\"]]..string.format(\"%02.1f\",a7)..[[%\" style=\"background-color:]].._..[[;width:]]..a7 ..[[%\"/></td>]]end;function correctSpelling(s)if US_Spellings and properties[s]and properties[s].usSpelling then return properties[s].usSpelling end;return s end;function displayFormat(z,B)local s=correctSpelling(z)local a6=z;if B then a6=\"O_\"..z end;local a9=a2[a6]local aa=properties[z].short;if B then if aa then s=aa..\" Overflow\"else s=s..\" OF\"end elseif s:len()>10 and aa then s=aa end;if not a9 then if B then return nil end;return\"?\",0.0,\"kℓ\",s end;local a5=a9.volume;local a7=math.min(100.0*a5/a9.capacity,100.0)if a5>=1000000 then return string.format(\"%02.1f\",a5/1000000),a7,\"Mℓ\",s end;return string.format(\"%02.1f\",a5/1000),a7,\"kℓ\",s end;function addSubstanceDisplay(ab,ac,a7,a8,a5)local _=statusColour(a7,a8)local ad=false;if _==U and a5~=\"?\"then ad=U end;return cell(\"18%\",ab,false,ad)..cell(\"13%\",ac,\"right\")..barGraph(\"17%\",a7,_)end;function newHTMLRow(ae)local af,ag,ah,ab=displayFormat(ae.text1,ae.overflow)if not af then return\"\"end;local ai,aj,ak,ac=displayFormat(ae.text2,ae.overflow)local al=\"&nbsp;\"local am=statusColour(aj,ae.overflow)local an=false;if am==U and ai~=\"?\"then an=U end;return X.tr..addSubstanceDisplay(ab,af..ah,ag,ae.overflow,af)..X.th..al..X.the..addSubstanceDisplay(ac,ai..ak,aj,ae.overflow,ai)..X.tre end;function newHTMLHeader(ae)return X.tr2 ..[[<th width=48% colspan=3>]]..ae.text1 ..[[</th><th/><th width=48% colspan=3>]]..ae.text2 ..[[</th>]]..X.tre end;local ao={}function addRow(ap,aq,B)ao[#ao+1]={text1=ap,text2=aq,overflow=B}end;function addHeaderRow(ap,aq)if not SkipHeadings then ao[#ao+1]={text1=ap,text2=aq,header=true}end end;for a6 in DisplayBlocks:gmatch(\"%S+\")do local ar=d[a6]addHeaderRow(ar.Headers[1],ar.Headers[2])for N,ae in ipairs(ar.Rows)do addRow(ae[1],ae[2],ae[3])end end;function addDisplayRows(as)local at={}local t=X.d1 ..X.tc;local au=#ao-ContRowsPerScreen*as+1;local av=au+ContRowsPerScreen-1;au=math.max(au,1)for aw=au,av do local ae=ao[aw]if not ae then break end;table.insert(at,ae)if ae.header then t=t..newHTMLHeader(ae)else t=t..newHTMLRow(ae)end;aw=aw+1 end;t=t..X.te..X.de;return t,at end;for ax,ay in pairs(a1)do local t,at=addDisplayRows(ax)ay.rows=at;for v,az in pairs(ay.screens)do az.setHTML(W..t)end end end;function refreshIndustryScreens(a1)local ao={}function addRow(v,ap,aq,aA,aB,_,L)ao[#ao+1]={id=v,text1=ap,text2=aq,text3=aA,text4=aB,colour=_,size=L}end;function addHeaderRow(ap,aq,aA,aB)ao[#ao+1]={text1=ap,text2=aq,text3=aA,text4=aB,header=true}end;local aC={}for aD in pairs(m)do table.insert(aC,aD)end;table.sort(aC)local aE={}for aD in pairs(l)do table.insert(aE,aD)end;table.sort(aE)local aF=#k-#aE;addHeaderRow(\"Machine\",\"Making [\"..#aC..\"/\"..aF..\"]\",\"#\",\"Alert\")for N,aD in ipairs(aC)do local aG=m[aD]local _=U;local aH=aG.status.state;if aH==\"JAMMED_MISSING_INGREDIENT\"then if WaitingAsAlarm then _=U else _=T end;aH=\"WAITING\"elseif aH==\"JAMMED_OUTPUT_FULL\"then _=U;aH=\"OUTPUT FULL\"elseif aH:find(\"JAMMED\")==1 then _=U end;local aI=n[aG.status.schematicId]addRow(aG.id,aG.shortType,aI,aG.id,aH,_,alertFontSize)end;if#aE>0 then addHeaderRow(\"Assm.\",\"Making\",\"#\",\"Status\")for N,aD in pairs(aE)do local aJ=l[aD]local _=U;local aH=aJ.status.state;if aH==\"JAMMED_MISSING_INGREDIENT\"then if WaitingAsAlarm then _=U else _=T end;aH=\"WAITING\"elseif aH==\"RUNNING\"then _=R elseif aH==\"STOPPED\"or aH==\"PENDING\"then _=S elseif aH==\"JAMMED_OUTPUT_FULL\"then _=U;aH=\"OUTPUT FULL\"elseif aH==\"JAMMED_NO_OUTPUT_CONTAINER\"then _=U;aH=\"NO OUT\"elseif aH:find(\"JAMMED\")==1 then _=U end;local aI=n[aJ.status.schematicId]addRow(aJ.id,aJ.size,aI,aJ.id,aH,_)end end;function newHTMLRow(ae)local a0=\"\"if ae.colour then a0=a0 ..\" color:\"..ae.colour..\";\"end;if p.on and ae.id==p.id then a0=a0 ..\" background-color:\"..tolColours.darkYellow..\";\"end;if a0 then a0=[[ style=\"]]..a0 ..[[\"]]end;return[[<tr]]..a0 ..[[>\r\n]]..X.thL..[[&nbsp;</th>]]..X.thL..X.nbr..ae.text1 ..X.nbre..[[</th>]]..X.thL..X.nbr..ae.text2 ..X.nbre..[[</th>]]..X.thR..X.nbr..ae.text3 ..X.nbre..[[&nbsp;</th>]]..X.thL..X.nbr..ae.text4 ..X.nbre..[[</th>\r\n</tr>]]end;function newHTMLHeader(ae)return X.tr2 ..[[<th width=2%/><th width=24%>]]..ae.text1 ..[[</th><th>]]..ae.text2 ..[[</th><th width=8% style=\"text-align:right\">]]..ae.text3 ..[[&nbsp;</th><th width=15%>]]..ae.text4 ..[[</th>]]..X.tre end;function addDisplayRows(as)local at={}local t=X.d1 ..X.tp;local au=#ao-ProdRowsPerScreen*as+1;local av=au+ProdRowsPerScreen-1;au=math.max(au,1)for aw=au,av do local ae=ao[aw]if not ae then break end;table.insert(at,ae)if ae.header then t=t..newHTMLHeader(ae)else t=t..newHTMLRow(ae)end;aw=aw+1 end;t=t..X.te..X.de;return t,at end;for ax,ay in pairs(a1)do local t,at=addDisplayRows(ax)ay.rows=at;for v,az in pairs(ay.screens)do az.setHTML(W..t)end end end;function refreshScreens()refreshContainerDisplay(h)refreshIndustryScreens(i)end;function processFirst()if contDebug then system.print(\"Tick First\")end;unit.stopTimer(\"First\")refreshScreens()end;function processChanges()if contDebug then system.print(\"Tick Statuses\")end;function lookupSchematic(aK)if n[aK]then return end;local aL=core.getSchematicInfo(aK)local aM=json.decode(aL)if not aM.products then n[aK]=\"Unknown#\"..aK;return end;n[aK]=aM.products[1].name end;function processStatus(J)local aN=core.getElementIndustryStatus(J.id)local aO=json.decode(aN)J.status=aO;if J.assembly then lookupSchematic(aO.schematicId)l[J.sortKey]=J;return end;if aO.state:find(\"JAMMED\")==1 then lookupSchematic(aO.schematicId)m[J.sortKey]=J else m[J.sortKey]=nil end end;local aP=math.min(DataThrottle,#k)local x=o;for aw=1,aP do processStatus(k[x])x=x+1;if x>#k then x=1 end end;o=x end;function processTick()if contDebug then system.print(\"Tick Live\")end;refreshScreens()end;function onStop()for N,g in pairs(unit)do if slotValid(g)then if g.setHTML then g.clear()end end end end;function HideHighlight()p.on=false;if#p.stickers==0 then return end;for aw in pairs(p.stickers)do core.deleteSticker(p.stickers[aw])end;p.stickers={}end;function ShowHighlight()p.on=true;table.insert(p.stickers,core.spawnArrowSticker(p.x+p.xoffset,p.y,p.z,\"north\"))table.insert(p.stickers,core.spawnArrowSticker(p.x,p.y-p.yoffset,p.z,\"east\"))table.insert(p.stickers,core.spawnArrowSticker(p.x-p.xoffset,p.y,p.z,\"south\"))table.insert(p.stickers,core.spawnArrowSticker(p.x,p.y+p.yoffset,p.z,\"west\"))table.insert(p.stickers,core.spawnArrowSticker(p.x,p.y,p.z-p.zoffset,\"up\"))table.insert(p.stickers,core.spawnArrowSticker(p.x,p.y,p.z+p.zoffset,\"down\"))end;function HighlightElement(v)if p.on then HideHighlight()end;p.id=v;local aQ=vec3(core.getElementPositionById(v))p.x=aQ.x-q;p.y=aQ.y-q;p.z=aQ.z-q;local L=3.1*(math.log(core.getElementMassById(v),10)-1.0)p.xoffset=L;p.yoffset=L;p.zoffset=L;ShowHighlight()end;function screenClicked(aR,aS,v,r,ao)local aT=math.floor(#ao-ProdRowsPerScreen*(1-aS)+1)local ae=ao[aT]if not ae.id then return end;if ae.id==p.id then HideHighlight()else HighlightElement(ae.id)end;refreshIndustryScreens(i,false)end;function onClick(aR,aS)for ax,ay in pairs(i)do for v,r in pairs(ay.screens)do if r.getMouseX()~=-1 and r.getMouseY()~=-1 then screenClicked(aR,aS,v,r,ay.rows)return end end end end;system.print(\"InDUstry Status \"..a)local databank=nil;onStart()unit.setTimer(\"First\",FirstDelay)unit.setTimer(\"Live\",RefreshDelay)unit.setTimer(\"MonitorChanges\",MonitorDelay)","filter":{"args":[],"signature":"start()","slotKey":"-1"},"key":"5"},{"code":"onStop()","filter":{"args":[],"signature":"stop()","slotKey":"-1"},"key":"6"},{"code":"processFirst()","filter":{"args":[{"value":"First"}],"signature":"tick(timerId)","slotKey":"-1"},"key":"7"},{"code":"processTick()","filter":{"args":[{"value":"Live"}],"signature":"tick(timerId)","slotKey":"-1"},"key":"8"},{"code":"processChanges()","filter":{"args":[{"value":"MonitorChanges"}],"signature":"tick(timerId)","slotKey":"-1"},"key":"9"}],"methods":[],"events":[]}