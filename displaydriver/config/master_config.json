{"slots":{"0":{"name":"slot1","type":{"events":[],"methods":[]}},"1":{"name":"slot2","type":{"events":[],"methods":[]}},"2":{"name":"slot3","type":{"events":[],"methods":[]}},"3":{"name":"slot4","type":{"events":[],"methods":[]}},"4":{"name":"slot5","type":{"events":[],"methods":[]}},"5":{"name":"slot6","type":{"events":[],"methods":[]}},"6":{"name":"slot7","type":{"events":[],"methods":[]}},"7":{"name":"slot8","type":{"events":[],"methods":[]}},"8":{"name":"slot9","type":{"events":[],"methods":[]}},"9":{"name":"slot10","type":{"events":[],"methods":[]}},"-1":{"name":"unit","type":{"events":[],"methods":[]}},"-2":{"name":"system","type":{"events":[],"methods":[]}},"-3":{"name":"library","type":{"events":[],"methods":[]}}},"handlers":[{"code":"local a=\"V2.0.0\"\r\n\r\nPlayerContainerProficiency = 30 --export Your Container Proficiency bonus in total percent (Skills->Mining and Inventory->Inventory Manager)\r\nPlayerContainerOptimization = 0 --export Your Container Optimization bonus in total percent (Skills->Mining and Inventory->Stock Control)\r\nLowLevel = 25 --export Percent for low level indicator\r\nHighLevel = 50 --export Percent for high level indicator\r\nContainerMatch = \"C_(.+)\" --export Match for single item Storage Container names (e.g. \"C_Hematite\")\r\nOverflowMatch = \"O_(.+)\" --export Match for single item Overflow Container names (e.g. \"O_Hydrogen\")\r\nContRowsPerScreen = 20 --export Container rows per screen\r\nProdRowsPerScreen = 24 --export Production rows per screen\r\nAlignTop = false --export Align with top of screen\r\nWaitingAsAlarm = false --export Display waiting state with alarm colour\r\nKeepBlocksTogether = false  --Don't break blocks across displays\r\nDataThrottle = 50 --export Maximum read/writes to process each update, lower this if you get CPU overloads\r\nFirstDelay = .3 --export Delay before First calculations\r\nRefreshDelay = 5 --export Screen Refresh Rate\r\nMonitorDelay = 3 --export Delay before Read operations are processed\r\nSkipHeadings = false --export No substance headings\r\nUS_Spellings = false --export Expect American spellings\r\n\r\ncontGap = 1.33 --export Cont Table gap (temporary)\r\nprodGap = 0.4 --export Prod Table gap (temporary)\r\nprodBase = 95 --export Prod Table base (temporary)\r\nprodScale = 1.0 --export Prod Table scale (temporary)\r\n\r\nlocal b=prodScale*(prodBase/ProdRowsPerScreen-prodGap)local c=100/ContRowsPerScreen-contGap;properties={Bauxite={density=1.2808,ore=true},Coal={density=1.3465,ore=true},Quartz={density=2.6498,ore=true},Hematite={density=5.0398,ore=true},Chromite={density=4.54,ore=true},Malachite={density=3.9997,ore=true},Limestone={density=2.7105,ore=true},Natron={density=1.5499,ore=true},Petalite={density=2.4119,ore=true},Garnierite={density=2.6,ore=true},Acanthite={density=7.1995,ore=true},Pyrite={density=5.0098,ore=true},Cobaltite={density=6.33,ore=true},Cryolite={density=2.9495,ore=true},Kolbeckite={density=2.37,ore=true},GoldNuggets={density=19.3,ore=true,short=\"GoldNug\"},Rhodonite={density=3.76,ore=true},Columbite={density=5.38,ore=true},Illmenite={density=4.55,ore=true},Vanadinite={density=6.95,ore=true},Hydrogen={density=0.069785,short=\"H₂\"},Oxygen={density=1.0000,short=\"O₂\"},Aluminium={density=2.7,short=\"Al\",usSpelling=\"Aluminum\"},Carbon={density=2.27,short=\"C\"},Silicon={density=2.33,short=\"Si\"},Iron={density=7.85,short=\"Fe\"},Calcium={density=1.55,short=\"Ca\"},Chromium={density=7.19,short=\"Cr\"},Copper={density=8.96,short=\"Cu\"},Sodium={density=0.97,short=\"Na\"},Lithium={density=0.53,short=\"Li\"},Nickel={density=8.91,short=\"Ni\"},Silver={density=10.49,short=\"Ag\"},Sulfur={density=1.82,short=\"S\"},Cobalt={density=8.9,short=\"Co\"},Fluorine={density=1.7,short=\"Fl\"},Gold={density=19.3,short=\"Au\"},Scandium={density=2.98,short=\"Sc\"},Manganese={density=7.21,short=\"Mn\"},Niobium={density=8.57,short=\"Ni\"},Titanium={density=4.51,short=\"Ti\"},Vanadium={density=6.00,short=\"Va\"},Silumin={density=3.00},Steel={density=8.05},AlFe={density=7.50},AlLi={density=2.50},CaRefCu={density=8.10},CuAg={density=9.20},Duralumin={density=2.80},[\"Stainless steel\"]={density=7.75,short=\"S.Steel\"},Inconel={density=8.5},Polycarbonate={density=1.4,short=\"Polycarb\"},Polycalcite={density=1.5,short=\"Polycalc\"},Polysulfide={density=1.6,short=\"Polysulf\"},Fluoropolymer={density=1.65,short=\"Fl.Poly\"}}local d={[\"electronics industry\"]=\"Elec. ind.\",[\"chemical industry\"]=\"Chem. ind.\",[\"metalworks industry\"]=\"Met. ind.\"}local e={basic=1,uncommon=2,advanced=3,rare=4}function slotValid(f)return f and type(f)==\"table\"and type(f.export)==\"table\"and f.getElementClass end;local g={}local h={}local i={}local j={}local k={}local l={}local m={[0]=\"Nothing\"}local n=1;local o={on=false,id=0,stickers={}}local p=0;function onStart()function setMessage(q,r)local s=[[<div style=\"width:100vw\"><div style=\"margin-top: 20vw;padding: 10vw; font-size: 4em;width: 100vw;display: inline-block;\">]]..r..[[</div></div>]]q.setHTML(s)end;for t,f in pairs(unit)do if slotValid(f)then if f.setHTML then f.activate()setMessage(f,\"If you see this you need to rename the screens...\")elseif not databank and f.getStringValue then databank=f elseif not core and f.getConstructId then core=f end end end;if not core then return end;p=2^math.floor(math.log(core.getMaxHitPoints(),10)+3)for t,f in pairs(unit)do if slotValid(f)then if f.setHTML then local u=f.getId()if u then local v=core.getElementNameById(u)local type,w=string.match(v,\"(.*)Display(%d)\")if type and w then w=tonumber(w)if type==\"Cont\"then if g[w]then g[w].screens[u]=f else g[w]={screens={[u]=f}}end;setMessage(f,\"If you see this you may need to restart the master board\")elseif type==\"Prod\"then if h[w]then h[w].screens[u]=f else h[w]={screens={[u]=f}}end;setMessage(f,\"If you see this you may need to restart the master board\")end end end end end end;function extractSubstanceName(v,x)local y=string.gsub(v,x,\"\")return y end;function getBaseCointainerProperties(u)local z=core.getElementMaxHitPointsById(u)if z<=123 then return 0.0,0.0 elseif z<=998 then return 229.09,1000.0 elseif z<=7996 then return 1281.31,8000.0 elseif z<=17315 then return 7421.35,64000.0 else return 14842.7,128000.0 end end;function addContainer(u,type)if string.lower(type)~=\"container\"then return false end;local v=core.getElementNameById(u)if not v then return true end;local A=false;local y=string.match(v,\"^\"..ContainerMatch)if not y then y=string.match(v,\"^\"..OverflowMatch)if not y then return end;A=true end;local B=properties[y]if not B then return true end;local C,D=getBaseCointainerProperties(u)capacity=D*(1.0+PlayerContainerProficiency/100)i[u]={name=v,id=u,substance=y,capacity=capacity,selfMass=C,property=B,overflow=A,isHub=D==0}return true end;function addIndustry(u,type)local E,F=string.match(type,\"(%S+)%s(.+)\")if not E or not F then return false end;if not e[E]then return false end;local v=core.getElementNameById(u)local G=string.lower(F)local H=d[G]or F;local I={name=v,industry=F,shortType=H,id=u,tier=E}if G==\"assembly line\"then I.assembly=true;local J,K=assemblySize(u)I.sortKey=J*10000+u;I.size=K else I.sortKey=F..\"_\"..v..\"_\"..u end;table.insert(j,I)return true end;local L=core.getElementIdList()for M,u in ipairs(L)do local type=core.getElementTypeById(u)if not addContainer(u,type)then addIndustry(u,type)end end end;local N={\"XS\",\" S\",\" M\",\" L\",\"XL\"}function assemblySize(u)local O=core.getElementMassById(u)local J=math.floor(math.log(O-90,10)+0.1)return J,N[J]end;tolColours={blue=\"#332288\",cyan=\"#66CCEE\",green=\"#228833\",yellow=\"#CCBB44\",red=\"#EE6677\",purple=\"#AA3377\",grey=\"#BBBBBB\",darkYellow=\"#666633\"}local P=\"darkslategray\"local Q=tolColours.green;local R=tolColours.cyan;local S=tolColours.yellow;local T=tolColours.red;local U=\"alignBottom\"if AlignTop then U=\"alignTop\"end;local V=[[<style>\r\n.alignTop,.alignBottom,.bar{font-family:monospace;color:white;text-align:left}\r\n.alignTop,.alignBottom{display:flex;width:100vw;height:100vh;padding:2px}\r\n.alignBottom{justify-content:flex-end;align-items:flex-end;margin:auto}\r\n.bar{border-radius:4px;border:1px solid white;margin:2px;}\r\n.bar::after{content: attr(lab);font-weight:600;padding:5px}\r\ntable{width:100vw}\r\ntd,th,table{margin:0;padding:0}\r\n</style>]]local W={d1=[[<div class=\"]]..U..[[\">]],de=[[</div>]],tc=[[<table style=\"font-size:]]..c..[[vh\">]],tp=[[<table style=\"font-size:]]..b..[[vh\">]],te=[[</table>]],tr=[[<tr>]],tr2=[[<tr style=\"background-color:]]..P..[[;\">]],tre=[[</tr>]],th=[[<th>]],thL=[[<th style=\"margin-left:20px\">]],thL2=[[<th style=\"margin-left:20px\" colspan=\"2\">]],thR=[[<th style=\"text-align:right\">]],th3=[[<th style=\"background-color:]]..P..[[;\">&nbsp;</th>]],the=[[</th>]],nbr=[[<nobr>]],nbre=[[</nobr>]]}function cell(X,r,Y,Z,K)local _=\"\"if Y then _=_..\" text-align:\"..Y..\";\"end;if Z then _=_..\" color:\"..Z..\";\"end;if K then _=_..\" font-size:\"..K..\";\"end;if _ then _=[[ style=\"]].._..[[\"]]end;return[[<th width=]]..X.._..[[><nobr>]]..r..[[</nobr></th>]]end;function refreshContainerDisplay(a0)local a1={}function processSubstanceContainer(a2)local a3=(core.getElementMassById(a2.id)-a2.selfMass)*(1.0+PlayerContainerOptimization/100)local a4=a3/a2.property.density;local a5=a2.substance;if a2.overflow then a5=\"O_\"..a2.substance end;if a1[a5]then a1[a5].volume=a1[a5].volume+a4;a1[a5].contentMass=a1[a5].contentMass+a3;a1[a5].capacity=a1[a5].capacity+a2.capacity else a1[a5]={substance=a2.substance,volume=a4,contentMass=a3,capacity=a2.capacity,overflow=a2.overflow}end end;for M,a2 in pairs(i)do processSubstanceContainer(a2)end;function statusColour(a6,a7)if a7 then a6=100.0-a6 end;if a6<=LowLevel then return T end;if a6<=HighLevel then return S end;return Q end;function barGraph(X,a6,Z)return[[<td width=]]..X..[[><div class=\"bar\" lab=\"]]..string.format(\"%02.1f\",a6)..[[%\" style=\"background-color:]]..Z..[[;width:]]..a6 ..[[%\"/></td>]]end;function correctSpelling(r)if US_Spellings and properties[r]and properties[r].usSpelling then return properties[r].usSpelling end;return r end;function displayFormat(y,A)local r=correctSpelling(y)local a5=y;if A then a5=\"O_\"..y end;local a8=a1[a5]local a9=properties[y].short;if A then if a9 then r=a9 ..\" Overflow\"else r=r..\" OF\"end elseif r:len()>10 and a9 then r=a9 end;if not a8 then if A then return nil end;return\"?\",0.0,\"kℓ\",r end;local a4=a8.volume;local a6=math.min(100.0*a4/a8.capacity,100.0)if a4>=1000000 then return string.format(\"%02.1f\",a4/1000000),a6,\"Mℓ\",r end;return string.format(\"%02.1f\",a4/1000),a6,\"kℓ\",r end;function addSubstanceDisplay(aa,ab,a6,a7,a4)local Z=statusColour(a6,a7)local ac=false;if Z==T and a4~=\"?\"then ac=T end;return cell(\"18%\",aa,false,ac)..cell(\"13%\",ab,\"right\")..barGraph(\"17%\",a6,Z)end;function newHTMLRow(ad)local ae,af,ag,aa=displayFormat(ad.text1,ad.overflow)if not ae then return\"\"end;local ah,ai,aj,ab=displayFormat(ad.text2,ad.overflow)local ak=\"&nbsp;\"local al=statusColour(ai,ad.overflow)local am=false;if al==T and ah~=\"?\"then am=T end;return W.tr..addSubstanceDisplay(aa,ae..ag,af,ad.overflow,ae)..W.th..ak..W.the..addSubstanceDisplay(ab,ah..aj,ai,ad.overflow,ah)..W.tre end;function newHTMLHeader(ad)return W.tr2 ..[[<th width=48% colspan=3>]]..ad.text1 ..[[</th><th/><th width=48% colspan=3>]]..ad.text2 ..[[</th>]]..W.tre end;local an={}function addRow(ao,ap,A)an[#an+1]={text1=ao,text2=ap,overflow=A}end;function addHeaderRow(ao,ap)if not SkipHeadings then an[#an+1]={text1=ao,text2=ap,header=true}end end;addHeaderRow(\"T5 Ores\",\"T5 Pures\")addRow(\"Rhodonite\",\"Manganese\")addRow(\"Columbite\",\"Niobium\")addRow(\"Illmenite\",\"Titanium\")addRow(\"Vanadinite\",\"Vanadium\")addHeaderRow(\"T4 Ores\",\"T4 Pures\")addRow(\"Cobaltite\",\"Cobalt\")addRow(\"Cryolite\",\"Fluorine\")addRow(\"GoldNuggets\",\"Gold\")addRow(\"Kolbeckite\",\"Scandium\")addHeaderRow(\"Plastic\",\"Plastic\")addRow(\"Polycarbonate\",\"Polycalcite\")addRow(\"Polysulfide\",\"Fluoropolymer\")addHeaderRow(\"Alloys\",\"Alloys\")addRow(\"Silumin\",\"Duralumin\")addRow(\"AlFe\",\"CaRefCu\")addRow(\"Steel\",\"Stainless steel\")addRow(\"AlLi\",\"Inconel\")addHeaderRow(\"T3 Ores\",\"T3 Pures\")addRow(\"Petalite\",\"Lithium\")addRow(\"Garnierite\",\"Nickel\")addRow(\"Pyrite\",\"Sulfur\")addRow(\"Acanthite\",\"Silver\")addHeaderRow(\"T2 Ores\",\"T2 Pures\")addRow(\"Natron\",\"Sodium\")addRow(\"Malachite\",\"Copper\")addRow(\"Limestone\",\"Calcium\")addRow(\"Chromite\",\"Chromium\")addHeaderRow(\"T1 Ores\",\"T1 Pures\")addRow(\"Bauxite\",\"Aluminium\")addRow(\"Hematite\",\"Iron\")addRow(\"Coal\",\"Carbon\")addRow(\"Quartz\",\"Silicon\")addHeaderRow(\"H₂\",\"O₂\")addRow(\"Hydrogen\",\"Oxygen\")addRow(\"Hydrogen\",\"Oxygen\",true)function addDisplayRows(aq)local ar={}local s=W.d1 ..W.tc;local as=#an-ContRowsPerScreen*aq+1;local at=as+ContRowsPerScreen-1;as=math.max(as,1)for au=as,at do local ad=an[au]if not ad then break end;table.insert(ar,ad)if ad.header then s=s..newHTMLHeader(ad)else s=s..newHTMLRow(ad)end;au=au+1 end;s=s..W.te..W.de;return s,ar end;for av,aw in pairs(a0)do local s,ar=addDisplayRows(av)aw.rows=ar;for u,ax in pairs(aw.screens)do ax.setHTML(V..s)end end end;function refreshIndustryScreens(a0)local an={}function addRow(u,ao,ap,ay,az,Z,K)an[#an+1]={id=u,text1=ao,text2=ap,text3=ay,text4=az,colour=Z,size=K}end;function addHeaderRow(ao,ap,ay,az)an[#an+1]={text1=ao,text2=ap,text3=ay,text4=az,header=true}end;local aA={}for aB in pairs(l)do table.insert(aA,aB)end;table.sort(aA)addHeaderRow(\"Machine\",\"Making\",\"#\",\"Alert\")for M,aB in ipairs(aA)do local aC=l[aB]local Z=T;local aD=aC.status.state;if aD==\"JAMMED_MISSING_INGREDIENT\"then if WaitingAsAlarm then Z=T else Z=S end;aD=\"WAITING\"elseif aD==\"JAMMED_OUTPUT_FULL\"then Z=T;aD=\"OUTPUT FULL\"elseif aD:find(\"JAMMED\")==1 then Z=T end;local aE=m[aC.status.schematicId]addRow(aC.id,aC.shortType,aE,aC.id,aD,Z,alertFontSize)end;local aF={}for aB in pairs(k)do table.insert(aF,aB)end;table.sort(aF)if#aF>0 then addHeaderRow(\"Assm.\",\"Making\",\"#\",\"Status\")for M,aB in pairs(aF)do local aG=k[aB]local Z=T;local aD=aG.status.state;if aD==\"JAMMED_MISSING_INGREDIENT\"then if WaitingAsAlarm then Z=T else Z=S end;aD=\"WAITING\"elseif aD==\"RUNNING\"then Z=Q elseif aD==\"STOPPED\"or aD==\"PENDING\"then Z=R elseif aD==\"JAMMED_OUTPUT_FULL\"then Z=T;aD=\"OUTPUT FULL\"elseif aD==\"JAMMED_NO_OUTPUT_CONTAINER\"then Z=T;aD=\"NO OUT\"elseif aD:find(\"JAMMED\")==1 then Z=T end;local aE=m[aG.status.schematicId]addRow(aG.id,aG.size,aE,aG.id,aD,Z)end end;function newHTMLRow(ad)local _=\"\"if ad.colour then _=_..\" color:\"..ad.colour..\";\"end;if o.on and ad.id==o.id then _=_..\" background-color:\"..tolColours.darkYellow..\";\"end;if _ then _=[[ style=\"]].._..[[\"]]end;return[[<tr]].._..[[>\r\n]]..W.thL..[[&nbsp;</th>\r\n]]..W.thL..W.nbr..ad.text1 ..W.nbre..[[</th>\r\n]]..W.thL..W.nbr..ad.text2 ..W.nbre..[[</th>\r\n]]..W.thR..W.nbr..ad.text3 ..W.nbre..[[&nbsp;</th>\r\n]]..W.thL..W.nbr..ad.text4 ..W.nbre..[[</th>\r\n</tr>]]end;function newHTMLHeader(ad)return W.tr2 ..[[<th width=2%/><th width=24%>]]..ad.text1 ..[[</th><th>]]..ad.text2 ..[[</th><th width=8% style=\"text-align:right\">]]..ad.text3 ..[[&nbsp;</th><th width=15%>]]..ad.text4 ..[[</th>]]..W.tre end;function addDisplayRows(aq)local ar={}local s=W.d1 ..W.tp;local as=#an-ProdRowsPerScreen*aq+1;local at=as+ProdRowsPerScreen-1;as=math.max(as,1)for au=as,at do local ad=an[au]if not ad then break end;table.insert(ar,ad)if ad.header then s=s..newHTMLHeader(ad)else s=s..newHTMLRow(ad)end;au=au+1 end;s=s..W.te..W.de;return s,ar end;for av,aw in pairs(a0)do local s,ar=addDisplayRows(av)aw.rows=ar;for u,ax in pairs(aw.screens)do ax.setHTML(V..s)end end end;function refreshScreens()refreshContainerDisplay(g)refreshIndustryScreens(h)end;function processFirst()unit.stopTimer(\"First\")refreshScreens()end;function processChanges()function lookupSchematic(aH)if m[aH]then return end;local aI=core.getSchematicInfo(aH)local aJ=json.decode(aI)if not aJ.products then m[aH]=\"Unknown#\"..aH;return end;m[aH]=aJ.products[1].name end;function processStatus(I)local aK=core.getElementIndustryStatus(I.id)local aL=json.decode(aK)I.status=aL;if I.assembly then lookupSchematic(aL.schematicId)k[I.sortKey]=I;return end;if aL.state:find(\"JAMMED\")==1 then lookupSchematic(aL.schematicId)l[I.sortKey]=I else l[I.sortKey]=nil end end;local aM=math.min(DataThrottle,#j)local w=n;for au=1,aM do processStatus(j[w])w=w+1;if w>#j then w=1 end end;n=w end;function processTick()refreshScreens()end;function onStop()for M,f in pairs(unit)do if slotValid(f)then if f.setHTML then f.clear()end end end end;function HideHighlight()o.on=false;if#o.stickers==0 then return end;for au in pairs(o.stickers)do core.deleteSticker(o.stickers[au])end;o.stickers={}end;function ShowHighlight()o.on=true;table.insert(o.stickers,core.spawnArrowSticker(o.x+o.xoffset,o.y,o.z,\"north\"))table.insert(o.stickers,core.spawnArrowSticker(o.x,o.y-o.yoffset,o.z,\"east\"))table.insert(o.stickers,core.spawnArrowSticker(o.x-o.xoffset,o.y,o.z,\"south\"))table.insert(o.stickers,core.spawnArrowSticker(o.x,o.y+o.yoffset,o.z,\"west\"))table.insert(o.stickers,core.spawnArrowSticker(o.x,o.y,o.z-o.zoffset,\"up\"))table.insert(o.stickers,core.spawnArrowSticker(o.x,o.y,o.z+o.zoffset,\"down\"))end;function HighlightElement(u)if o.on then HideHighlight()end;o.id=u;local aN=vec3(core.getElementPositionById(u))o.x=aN.x-p;o.y=aN.y-p;o.z=aN.z-p;local K=3.1*(math.log(core.getElementMassById(u),10)-1.0)o.xoffset=K;o.yoffset=K;o.zoffset=K;ShowHighlight()end;function screenClicked(aO,aP,u,q,an)local aQ=math.floor(#an-ProdRowsPerScreen*(1-aP)+1)local ad=an[aQ]if not ad.id then return end;if ad.id==o.id then HideHighlight()else HighlightElement(ad.id)end;refreshIndustryScreens(h,false)end;function onClick(aO,aP)for av,aw in pairs(h)do for u,q in pairs(aw.screens)do if q.getMouseX()~=-1 and q.getMouseY()~=-1 then screenClicked(aO,aP,u,q,aw.rows)return end end end end;system.print(\"InDUstry Status \"..a)local databank=nil;onStart()unit.setTimer(\"First\",FirstDelay)unit.setTimer(\"Live\",RefreshDelay)unit.setTimer(\"MonitorChanges\",MonitorDelay)","filter":{"args":[],"signature":"start()","slotKey":"-1"},"key":"0"},{"code":"onStop()","filter":{"args":[],"signature":"stop()","slotKey":"-1"},"key":"1"},{"code":"processFirst()","filter":{"args":[{"value":"First"}],"signature":"tick(timerId)","slotKey":"-1"},"key":"2"},{"code":"processTick()","filter":{"args":[{"value":"Live"}],"signature":"tick(timerId)","slotKey":"-1"},"key":"3"},{"code":"processChanges()","filter":{"args":[{"value":"MonitorChanges"}],"signature":"tick(timerId)","slotKey":"-1"},"key":"4"}],"methods":[],"events":[]}